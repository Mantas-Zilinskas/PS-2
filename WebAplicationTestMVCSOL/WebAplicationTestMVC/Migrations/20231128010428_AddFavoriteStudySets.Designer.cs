// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebAplicationTestMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231128010428_AddFavoriteStudySets")]
    partial class AddFavoriteStudySets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("WebAplicationTestMVC.Models.ArchivedStudySet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateArchived")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("OriginalStudySetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudySetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudySetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("StudyTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudySetId");

                    b.ToTable("ArchivedStudySets");
                });

            modelBuilder.Entity("WebAplicationTestMVC.Models.FavoriteStudySet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudySetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserIdentifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudySetId");

                    b.ToTable("FavoriteStudySets");
                });

            modelBuilder.Entity("WebAplicationTestMVC.Models.Flashcard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudySetId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudySetId");

                    b.ToTable("Flashcards");
                });

            modelBuilder.Entity("WebAplicationTestMVC.Models.StudySet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudySetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("StudyTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StudySets");
                });

            modelBuilder.Entity("WebAplicationTestMVC.Models.ArchivedStudySet", b =>
                {
                    b.HasOne("WebAplicationTestMVC.Models.StudySet", "OriginalStudySet")
                        .WithMany()
                        .HasForeignKey("StudySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginalStudySet");
                });

            modelBuilder.Entity("WebAplicationTestMVC.Models.FavoriteStudySet", b =>
                {
                    b.HasOne("WebAplicationTestMVC.Models.StudySet", "StudySet")
                        .WithMany()
                        .HasForeignKey("StudySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudySet");
                });

            modelBuilder.Entity("WebAplicationTestMVC.Models.Flashcard", b =>
                {
                    b.HasOne("WebAplicationTestMVC.Models.StudySet", "StudySet")
                        .WithMany("Flashcards")
                        .HasForeignKey("StudySetId")
                        .IsRequired();

                    b.Navigation("StudySet");
                });

            modelBuilder.Entity("WebAplicationTestMVC.Models.StudySet", b =>
                {
                    b.Navigation("Flashcards");
                });
#pragma warning restore 612, 618
        }
    }
}
